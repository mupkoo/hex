name: CI

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 14.15.5

      - name: Node modules cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Yarn install
        run: yarn install --frozen-lockfile

      - name: Lint
        run: yarn lint

      - name: Test
        run: npx percy exec -- yarn test
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}

  try-scenarios:
    name: "Try: ${{ matrix.ember-try-scenario }}"
    runs-on: ubuntu-latest
    needs: test

    strategy:
      # fail-fast: true
      matrix:
        ember-try-scenario:
          - ember-lts-3.20
          - ember-release
          - ember-beta
          - embroider-safe
          # - embroider-optimized

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 14.15.5

      - name: Yarn install
        run: yarn install --frozen-lockfile

      - name: Test
        run: node_modules/.bin/ember try:one ${{ matrix.ember-try-scenario }} --skip-cleanup

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 14.15.5

      - name: Node modules cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Yarn install
        run: yarn install

      - name: Set deploy version path
        run: echo "ADDON_DOCS_VERSION_PATH=$(echo ${GITHUB_REF##*/})" >> $GITHUB_ENV

      - run: echo $ADDON_DOCS_VERSION_PATH

      - name: Deploy
        run: yarn deploy --verbose
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
