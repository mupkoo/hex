.btn {
  @include button-size(.375rem, 1rem, .875rem, 1.6, $border-radius-sm);
  @include transition(
    background-color $transition-duration $ease,
    border $transition-duration $ease,
    box-shadow $transition-duration $ease,
    color $transition-duration $ease
  );

  display: inline-flex;
  align-items: center;
  border: .125rem solid transparent;
  font-weight: 500;
  text-align: center;
  white-space: nowrap;

  vertical-align: middle;
  user-select: none;

  // Share hover and focus styles
  &:hover,
  &:focus {
    text-decoration: none;
  }

  &:focus,
  &.focus {
    outline: 0;
    box-shadow: $focus-shadow;
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    box-shadow: none;
    cursor: not-allowed;
    opacity: .65;
  }

  &:not(:disabled):not(.disabled) {
    cursor: pointer;
  }

  svg {
    margin: 0 .25rem 0 -.25rem;
  }

  .-right {
    margin: 0 -.25rem 0 .25rem;
  }
}

.btn-circle {
  @include button-size(.5rem, .5rem, .75rem, 1.428571429, 50%);

  svg {
    width: 1.125rem;
    height: 1.125rem;
    margin: 0;
  }
}

// Future-proof disabling of clicks on `<a>` elements
a.btn.disabled,
fieldset:disabled a.btn {
  pointer-events: none;
}

.btn {
  @include button-variant(
    $gray-200,
    $gray-200,
    rgba($primary, $focus-shadow-opacity),
    $gray-100,
    $gray-100,
    $gray-300,
    $gray-300
  );
}

.btn-subtle {
  @include button-variant(
    transparent,
    transparent,
    rgba($primary, $focus-shadow-opacity),
    $gray-100,
    $gray-100,
    $gray-300,
    $gray-300
  );
}

.btn-primary {
  @include button-variant($primary, $primary);
}

.btn-success {
  @include button-variant($success, $success);
}

.btn-danger {
  @include button-variant($danger, $danger);
}

.btn-warning {
  @include button-variant($warning, $warning);
}

.btn-outline-default {
  @include button-variant-outline(
    $gray-200,
    $text,
    rgba($primary, $focus-shadow-opacity),
    $gray-100,
    $gray-100,
    $gray-300,
    $gray-300
  );
}

.btn-outline-primary {
  @include button-variant-outline($primary);
}

.btn-outline-success {
  @include button-variant-outline($success);
}

.btn-outline-danger {
  @include button-variant-outline($danger);
}

.btn-outline-warning {
  @include button-variant-outline($warning);
}

// Make a button look and behave like a link
.btn-link {
  background-color: transparent;
  border-color: transparent;
  color: $link-color;
  font-weight: 400;
  text-transform: none;

  &:hover {
    color: $link-hover-color;
    text-decoration: $link-hover-text-decoration;
    background-color: transparent;
    border-color: transparent;
  }

  &:focus,
  &.focus {
    text-decoration: $link-hover-text-decoration;
    border-color: transparent;
  }

  &:disabled,
  &.disabled {
    color: $gray-600;
    pointer-events: none;
  }

  // No need for an active state here
}

.btn-sm {
  @include button-size(.25rem, .75rem, .75rem, 1.428571429, $border-radius-sm);
}

.btn-lg {
  @include button-size(.5rem, 1.5rem, 1.125rem, 1.428571429, $border-radius);
}

.btn-block {
  display: block;
  width: 100%;

  // Vertically space out multiple block buttons
  + .btn-block {
    margin-top: .5rem;
  }
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}

.btn-spinner {
  position: relative;

  .spinner {
    position: absolute;
    top: calc(50% - .75rem);
    left: calc(50% - .75rem);
    width: 1.5rem;
    height: 1.5rem;
    margin: 0;
  }

  &.btn-sm {
    .spinner {
      top: calc(50% - .625rem);
      left: calc(50% - .625rem);
      width: 1.25rem;
      height: 1.25rem;
    }
  }

  .spinner-path {
    stroke: rgba($primary, .6);
  }

  &.btn-primary,
  &.btn-success,
  &.btn-danger,
  &.btn-warning {
    .spinner-path {
      stroke: rgba($white, .6);
    }
  }
}

.btn-spinner-label {
  transition: opacity .2s ease-in-out;
  opacity: 1;

  &.-is-loading {
    opacity: 0;
  }
}
